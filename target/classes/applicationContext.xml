<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="  
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"> 
            <!--spring配置文件，这里主要配置和业务逻辑有关的-->
           	<!--比如 数据源 事务控制==-->
           	
           	<context:property-placeholder location="classpath:dbconfig.properties"/>
           	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
           		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
           		<property name="driverClass" value="${jdbc.driverClass}"></property>
           		<property name="user" value="${jdbc.jdbcName}"></property>
           		<property name="password" value="${jdbc.jdbcPassword}"></property>
           	</bean>
           	<!--配置和mybatis的整合-->
           	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
           		<property name="configLocation" value="classpath:mybatis.xml"></property>
           		<property name="dataSource" ref="pooledDataSource"></property>
           		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
           	</bean>
           	<!--配置扫描器 将mybatis的接口实现加入到ioc容器中-->
           	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
           		<!--扫码所有dao接口的实现  加入到ioc容器中-->
           		<property name="basePackage" value="gc.dao"></property>
           	</bean>
           	<!--事务控制-->
           	<bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
           		<property name="dataSource" ref="pooledDataSource"></property>
           	</bean>
           	<!--开始基于注解的事务，使用xml配置形式的事务-->
           	<aop:config>
           		<!--切入点表达式-->
           		<aop:pointcut expression="execution(* gc.service..*(..))" id="txPoint"/>
           		<!--配置事务增强-->
           		<aop:advisor advice-ref="txAdvice"/>
           	</aop:config>
           	<tx:advice id="txAdvice" transaction-manager="transactionManager">
           		<tx:attributes>
           			<!--所有方法都是事务方法-->
           			<tx:method name="*"/>
           			<!--以get开始的所有方法 都只读-->
           			<tx:method name="get*" read-only="true"/>
           		</tx:attributes>
           	</tx:advice>
</beans>